<?xml version='1.0' encoding='UTF-8' ?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:f="http://java.sun.com/jsf/core">
<ui:composition template="baseTemplate.xhtml">
  <ui:define name="content">
    <h:panelGroup rendered="#{!loginController.loggedIn}">
      <div class="container container-fluid">
        <h:outputText class="shea-sepherd-color-font-primary h4" value="Übersicht"/>

        <div class="mb-4 mt-4">
          <div class="rounded border border-1 border-solid p-1 bg-light">
            <div class="text-center rounded bg-secondary-subtle p-2">
              <h:outputText class="h6 fw-bold" value="Geisternetze mit Status..."/>
            </div>

            <div class="d-flex">
              <div class="w-50 me-1">
                <div class="text-center rounded bg-danger-subtle p-2 mt-1 border border-1 border-dark">
                  <h:outputText class="h6" value="...Gemeldet"/>
                </div>
                <div class="p-2 mt-2 mb-3">
                  <h:panelGroup rendered="#{empty ghostNetController.reportedGhostNets}">
                    <h:outputText styleClass="shea-sepherd-color-font-primary" value="Es wurden keine neuen Geisternetze gemeldet."/>
                  </h:panelGroup>

                  <ui:repeat value="#{ghostNetController.reportedGhostNetsOverview}" var="ghostnet" varStatus="status">
                    <h:form id="form_#{status.index}">
                      <div class="card mt-1 ms-1 me-1 bg-danger-subtle border-0">
                        <div class="card-body">
                          <div class="d-flex">
                            <div class="w-75">
                              <div><h:outputText class="card-title h5" value="~ #{ghostnet.size} m²"/></div>
                              <div><h:outputText class="card-text" value="Breitengrad: #{ghostnet.location.latitude}"/></div>
                              <div class="mb-2"><h:outputText class="card-text" value="Längengrad: #{ghostnet.location.longitude}"/></div>

                              <div><h:outputText class="card-text mb-2" value="Gemeldet: #{ghostnet.reportedBy != null ? ghostnet.reportedBy.name.concat(' (').concat(ghostnet.reportedBy.phoneNumber).concat(')') : 'Anonym'}"/></div>
                            </div>
                          </div>
                          <div class="mt-4">
                            <script>
                              function openModal() {
                                var myModal = new bootstrap.Modal(document.getElementById('contactInformationModal'));
                                myModal.show();
                              }
                            </script>
                            <h:commandButton value="Verschollen melden" styleClass="btn btn-light p-2 w-100 mt-1">
                              <f:setPropertyActionListener target="#{ghostNetController.tempGhostNet}" value="#{ghostnet}" />
                              <f:ajax execute="@this" render="confirmationForm" onevent="function(data) {
                                  if (data.status === 'success') openModal();
                              }"/>
                            </h:commandButton>
                          </div>
                        </div>
                      </div>
                    </h:form>
                  </ui:repeat>
                </div>
              </div>
              <div class="flex-fill">
                <div class="text-center rounded bg-secondary-subtle text-white p-2 mt-1 border border-1 border-dark">
                  <h:outputText class="text-dark h6" value="...Verschollen"/>
                </div>
                <div class="p-2 mt-2 mb-3">
                  <ui:repeat value="#{ghostNetController.allLostGhostNets}" var="ghostnet">
                    <h:form>
                      <div class="card mt-1 ms-1 me-1 bg-secondary-subtle border-0">
                        <div class="card-body">
                          <div class="d-flex">
                            <div class="w-75">
                              <div><h:outputText class="card-title h5" value="~ #{ghostnet.size} m²"/></div>
                              <div><h:outputText class="card-text" value="Breitengrad: #{ghostnet.location.latitude}"/></div>
                              <div class="mb-2"><h:outputText class="card-text" value="Längengrad: #{ghostnet.location.longitude}"/></div>

                              <div><h:outputText class="card-text" value="Gemeldet: #{ghostnet.reportedBy != null ? ghostnet.reportedBy.name.concat(' (').concat(ghostnet.reportedBy.phoneNumber).concat(')') : 'Anonym'}"/></div>
                              <div><h:outputText class="card-text mb-2" value="Verschollen gemeldet: #{ghostnet.announcedLostBy != null ? ghostnet.announcedLostBy.name.concat(' (').concat(ghostnet.announcedLostBy.phoneNumber).concat(')') : 'Anonym'}"/></div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </h:form>
                  </ui:repeat>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </h:panelGroup>

    <h:panelGroup id="confirmationModalContainer">
      <h:form id="confirmationForm">
        <div class="modal fade" id="contactInformationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Geisternetz verschollen melden</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Schließen"/>
              </div>
              <div class="modal-body">
                <div class="mb-3">
                  <h:outputText class="shea-sepherd-color-font-primary h6" value="Geisternetz"/>

                  <div><h:outputText class="card-title h5" value="~ #{ghostNetController.tempGhostNet.size} m²"/></div>
                  <div><h:outputText class="card-text" value="Breitengrad: #{ghostNetController.tempGhostNet.location.latitude}"/></div>
                  <div class="mb-2"><h:outputText class="card-text" value="Längengrad: #{ghostNetController.tempGhostNet.location.longitude}"/></div>

                  <div><h:outputText class="card-text" value="Gemeldet: #{ghostNetController.tempGhostNet.reportedBy != null ? ghostNetController.tempGhostNet.reportedBy.name.concat(' (').concat(ghostNetController.tempGhostNet.reportedBy.phoneNumber).concat(')') : 'Anonym'}"/></div>
                </div>

                <div class="mt-2">
                  <h:outputText class="shea-sepherd-color-font-primary h6" value="Kontaktinformationen"/>
                </div>
                <div class="mb-1">
                  <h:outputLabel value="Name*" for="modalName" class="form-label"/>
                  <h:inputText id="modalName" value="#{ghostNetController.tempName}" class="form-control"/>
                </div>
                <div class="mb-2">
                  <h:outputLabel value="Telefonnummer*" for="modalPhoneNumber" class="form-label"/>
                  <h:inputText id="modalPhoneNumber" value="#{ghostNetController.tempPhoneNumber}" class="form-control"/>
                </div>
                <div class="mb-1">
                  <h:outputLabel class="form-text" value="*Pflichtfeld"/>
                </div>
              </div>
              <div class="modal-footer d-block">
                <div class="row">
                  <div class="col">
                    <h:commandButton value="Verschollen melden" action="#{ghostNetController.announceLostAsReportingPerson()}" styleClass="btn btn-primary w-100"/>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </h:form>
    </h:panelGroup>

    <h:panelGroup rendered="#{loginController.loggedIn}">
      #{loginController.redirectToLoginPage()}
    </h:panelGroup>
  </ui:define>
</ui:composition>
</html>
